// src/components/Bookshelf.tsx (YÂ∫ßÊ®ô‰øÆÊ≠£Áâà)

import { useGLTF } from '@react-three/drei';
import React from 'react';
import Book from './Book';
import * as THREE from 'three'; 

// üí° ‰ΩçÁΩÆÊÉÖÂ†±„Çíprops„ÅßÂèó„ÅëÂèñ„Çã„Åü„ÇÅ„ÅÆÂûã„ÇíÂÆöÁæ©
interface BookshelfProps {
  position: [number, number, number]; 
  rotationY: number; 
  bookIdOffset: number; // ID„ÅÆ„Ç™„Éï„Çª„ÉÉ„ÉàÂÄ§
}

// ----------------------------------------------------
// „É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£Èñ¢Êï∞ (Â§âÊõ¥„Å™„Åó)
// ----------------------------------------------------
const rand = (min: number, max: number) => Math.random() * (max - min) + min;
const randColor = () => `#${new THREE.Color(Math.random(), Math.random(), Math.random()).getHexString()}`;

// ----------------------------------------------------
// Êú¨„ÅÆÈÖçÁΩÆÂÆöÊï∞
// ----------------------------------------------------
const BOOKSHELF_SCALE: [number, number, number] = [15, 8, 15];

// üí° „Äê‰øÆÊ≠£ÁÇπÔºë„Äë„É¢„Éá„É´Ëá™‰Ωì„ÅÆY‰ΩçÁΩÆË™øÊï¥„ÇíÂÆöÊï∞„Åß‰øùÊåÅ
const MODEL_Y_ADJUSTMENT = 2.0; 

// üí° „Äê‰øÆÊ≠£ÁÇπÔºí„ÄëÊ£ö„ÅÆYÂ∫ßÊ®ô„ÅÆ‰∏≠ÂøÉ‰ΩçÁΩÆ„Çí„ÄÅ„Ç∞„É≠„Éº„Éê„É´„Å™„É¢„Éá„É´„ÅÆ‰∏≠ÂøÉ(Y=-3.0)„Åã„Çâ„ÅÆÁõ∏ÂØæ‰ΩçÁΩÆ„ÅßÂÆöÁæ©
// „É¢„Éá„É´„ÅÆ‰∏≠ÂøÉ (-5, -5, 0) + [0, MODEL_Y_ADJUSTMENT, 0] = (-5, -3, 0)
// Êú¨Ê£ö„É¢„Éá„É´„ÅÆ‰∏≠ÂøÉYÂ∫ßÊ®ô (-3.0) „ÇíÂü∫Ê∫ñ„Å®„Åô„Çã„ÄÇ
const BOOK_POSITION_Y_BASE = -3.0; // Êú¨Ê£ö„ÅÆÂûÇÁõ¥ÊñπÂêë„ÅÆ‰∏≠ÂøÉYÂ∫ßÊ®ô

// üí° „Äê‰øÆÊ≠£ÁÇπÔºì„ÄëÊ£ö„ÅÆYÂ∫ßÊ®ô„ÅÆÁµ∂ÂØæ‰ΩçÁΩÆ„ÇíÂÆöÁæ©Ôºà„É¢„Éá„É´„ÅÆ‰∏≠ÂøÉY=-3.0„ÇíÂü∫Ê∫ñÔºâ
// „É¢„Éá„É´„ÅÆÊ£ö„ÅÆÁõ∏ÂØæÁöÑ„Å™È´ò„Åï„Å´Âêà„Çè„Åõ„Å¶Ë™øÊï¥
const SHELF_Y_CENTERS = [
    BOOK_POSITION_Y_BASE + 0.9, // ‰∏ä„Åã„Çâ1ÊÆµÁõÆ (-3.0 + 0.9 = -2.1)
    BOOK_POSITION_Y_BASE + 0.1, // ‰∏ä„Åã„Çâ2ÊÆµÁõÆ (-3.0 + 0.1 = -2.9)
    BOOK_POSITION_Y_BASE - 0.7, // ‰∏ä„Åã„Çâ3ÊÆµÁõÆ (-3.0 - 0.7 = -3.7)
    BOOK_POSITION_Y_BASE - 1.5, // ‰∏ä„Åã„Çâ4ÊÆµÁõÆ (-3.0 - 1.5 = -4.5)
];

const X_RANGE: [number, number] = [-0.5, 0.5]; 
// ‰∏Ä„Å§„ÅÆÊ£ö„Å´ÈÖçÁΩÆ„Åô„ÇãÊú¨„ÅÆÊúÄÂ§ßÊï∞
//const MAX_BOOKS_PER_SHELF = 10;
// BookDAta.ts„ÅåÂ∞ë„Å™„ÅÑ„ÅÆ„Å®Ë¶ãÊ†Ñ„Åà„ÅÆÈñ¢‰øÇ„Åß„Åì„ÅÆÂÄ§„Åß
const MAX_BOOKS_PER_SHELF = 1; 

// ----------------------------------------------------
// Êú¨„ÅÆ„É©„É≥„ÉÄ„É†ÁîüÊàêÈñ¢Êï∞ (Â§âÊõ¥„Å™„Åó)
// ----------------------------------------------------
const generateRandomBooks = (
  shelfYCenter: number, 
  xRange: [number, number], 
  maxBooks: number, 
  startId: number, 
) => {
  const books = [];
  let currentX = xRange[0]; 
  let currentId = startId;
  const Z_OFFSET = rand(-0.02, 0.02); 

  while (currentX < xRange[1] && books.length < maxBooks) {
    const bookWidth = rand(0.15, 0.25); 
    const bookHeight = rand(1.0, 1.3);
    const bookDepth = rand(0.7, 0.9);
    
    const bookPositionX = currentX + bookWidth / 2;
    
    if (bookPositionX + bookWidth / 2 > xRange[1]) break; 

    books.push(
      <Book 
        key={currentId}
        bookId={currentId} 
        // üí° „Åì„Åì„Åß„ÅÆ‰ΩçÁΩÆ„ÅØ Bookshelf „ÅÆ group „ÅÆ„É≠„Éº„Ç´„É´Â∫ßÊ®ôÁ≥ª„Å™„ÅÆ„Åß„ÄÅ
        // group „ÅÆ‰ΩçÁΩÆ ([0, 0, 0]) „Åã„Çâ„ÅÆÁõ∏ÂØæ‰ΩçÁΩÆ„ÅßÂÆöÁæ©„Åô„Çå„Å∞ OK„ÄÇ
        position={[bookPositionX, shelfYCenter + 5, Z_OFFSET]} // üí° group „ÅÆ Y=-5 „ÇíÊâì„Å°Ê∂à„Åô„Åü„ÇÅ +5 
        size={[bookWidth, bookHeight, bookDepth]}
        color={randColor()}
      />
    );
    
    currentX = bookPositionX + bookWidth / 2 + rand(0.05, 0.1); 
    currentId++;
  }
  return books;
};

// ----------------------------------------------------
// Bookshelf „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
// ----------------------------------------------------
const Bookshelf: React.FC<BookshelfProps> = ({ position, rotationY, bookIdOffset }) => {
  const gltf = useGLTF('/my_bookshelf.glb'); 
  
  const bookElements = React.useMemo(() => {
    let generatedBooks: any[] = [];
    let currentId = bookIdOffset;

    SHELF_Y_CENTERS.forEach((shelfYCenter) => {
      const booksOnShelf = generateRandomBooks(
        shelfYCenter, 
        X_RANGE, 
        MAX_BOOKS_PER_SHELF, 
        currentId,
      );
      generatedBooks = [...generatedBooks, ...booksOnShelf];
      currentId += MAX_BOOKS_PER_SHELF; 
    });
    return generatedBooks;
  }, [bookIdOffset]); 

  const clonedScene = React.useMemo(() => gltf.scene.clone(), [gltf.scene]);

  clonedScene.traverse((child) => {
    if (child instanceof THREE.Mesh) {
      child.castShadow = true;
      child.receiveShadow = true;
    }
  });

  return (
    <group 
        // üí° App.tsx„ÅßÂÆöÁæ©„Åï„Çå„Åü‰ΩçÁΩÆ (‰æã: [-7.5, -5, 0])
        position={position} 
        rotation={[0, rotationY, 0]} 
    >
      <primitive
        object={clonedScene} 
        scale={BOOKSHELF_SCALE} 
        // üí° „É¢„Éá„É´„ÇíÂú∞Èù¢„Å´Âêà„Çè„Åõ„Çã„Åü„ÇÅ„ÅÆË™øÊï¥ („É¢„Éá„É´„ÅÆ‰∏≠ÂøÉ„Çí Y=-3.0 „Å´„Åô„Çã)
        position={[0, MODEL_Y_ADJUSTMENT, 0]} 
        rotation={[0, 0, 0]} 
      />

      {bookElements}
    </group>
  );
};

export default Bookshelf;